package com.dpstudio.module.security.model;

import net.ymate.platform.core.beans.annotation.PropertyState;
import net.ymate.platform.persistence.IShardingable;
import net.ymate.platform.persistence.annotation.*;
import net.ymate.platform.persistence.jdbc.IConnectionHolder;
import net.ymate.platform.persistence.jdbc.support.BaseEntity;

/**
 * SecuritySetting generated By EntityGenerator on 2020/10/19 上午 10:00:55
 *
 * @author YMP
 * @version 1.0
 */
@Entity(SecuritySetting.TABLE_NAME)
public class SecuritySetting extends BaseEntity<SecuritySetting, String> {

	private static final long serialVersionUID = 1L;

	@Id
	@Property(name = FIELDS.ID, nullable = false, length = 32)
	@Comment("")
    @PropertyState(propertyName = FIELDS.ID)
	private String id;
	
	@Property(name = FIELDS.LOGIN_LOG_STATUS, length = 1)
	@Default("0")
	@Comment("是否记录登录日志")
    @PropertyState(propertyName = FIELDS.LOGIN_LOG_STATUS)
	private Integer loginLogStatus;
	
	@Property(name = FIELDS.LOGIN_ERROR_COUNT, length = 4)
	@Default("0")
	@Comment("登录错误锁定次数")
    @PropertyState(propertyName = FIELDS.LOGIN_ERROR_COUNT)
	private Integer loginErrorCount;
	
	@Property(name = FIELDS.LOGIN_ERROR_TIME, length = 4)
	@Default("0")
	@Comment("登录错误锁定时间(单位分钟)")
    @PropertyState(propertyName = FIELDS.LOGIN_ERROR_TIME)
	private Integer loginErrorTime;
	
	@Property(name = FIELDS.LOGIN_ERROR_STATUS, length = 1)
	@Default("0")
	@Comment("是否开启错误次数")
    @PropertyState(propertyName = FIELDS.LOGIN_ERROR_STATUS)
	private Integer loginErrorStatus;
	
	@Property(name = FIELDS.LOGIN_UNLOCK_FOUNDER, length = 1)
	@Default("0")
	@Comment("总管理员是否可以解锁")
    @PropertyState(propertyName = FIELDS.LOGIN_UNLOCK_FOUNDER)
	private Integer loginUnlockFounder;
	
	@Property(name = FIELDS.LOGIN_NOT_IP_STATUS, length = 1)
	@Default("0")
	@Comment("是否开启异地登录")
    @PropertyState(propertyName = FIELDS.LOGIN_NOT_IP_STATUS)
	private Integer loginNotIpStatus;
	
	@Property(name = FIELDS.LOGIN_NOT_IP_NOTICE, length = 1)
	@Default("0")
	@Comment("异地登录是否提醒")
    @PropertyState(propertyName = FIELDS.LOGIN_NOT_IP_NOTICE)
	private Integer loginNotIpNotice;
	
	@Property(name = FIELDS.LOGIN_CLIENT_STATUS, length = 1)
	@Default("0")
	@Comment("是否可以多端登录")
    @PropertyState(propertyName = FIELDS.LOGIN_CLIENT_STATUS)
	private Integer loginClientStatus;
	
	@Property(name = FIELDS.LOGIN_CLIENT_TYPE, length = 1)
	@Default("0")
	@Comment("多端登录的验证类型")
    @PropertyState(propertyName = FIELDS.LOGIN_CLIENT_TYPE)
	private Integer loginClientType;
	
	@Property(name = FIELDS.LAST_MODIFY_TIME, length = 13)
	@Default("0")
	@Comment("最后修改时间")
    @PropertyState(propertyName = FIELDS.LAST_MODIFY_TIME)
	private Long lastModifyTime;
	
	@Property(name = FIELDS.LAST_MODIFY_USER, length = 32)
	@Comment("最后修改人")
    @PropertyState(propertyName = FIELDS.LAST_MODIFY_USER)
	private String lastModifyUser;

	/**
	 * 构造器
	 */
	public SecuritySetting() {
	}

    /**
     * 构造器
     *	@param id
     */
    public SecuritySetting(String id) {
        this.id = id;
    }

	/**
	 * 构造器
	 *	@param id
	 *	@param loginLogStatus
	 *	@param loginErrorCount
	 *	@param loginErrorTime
	 *	@param loginErrorStatus
	 *	@param loginUnlockFounder
	 *	@param loginNotIpStatus
	 *	@param loginNotIpNotice
	 *	@param loginClientStatus
	 *	@param loginClientType
	 *	@param lastModifyTime
	 *	@param lastModifyUser
	 */
	public SecuritySetting(String id, Integer loginLogStatus, Integer loginErrorCount, Integer loginErrorTime, Integer loginErrorStatus, Integer loginUnlockFounder, Integer loginNotIpStatus, Integer loginNotIpNotice, Integer loginClientStatus, Integer loginClientType, Long lastModifyTime, String lastModifyUser) {
		this.id = id;
		this.loginLogStatus = loginLogStatus;
		this.loginErrorCount = loginErrorCount;
		this.loginErrorTime = loginErrorTime;
		this.loginErrorStatus = loginErrorStatus;
		this.loginUnlockFounder = loginUnlockFounder;
		this.loginNotIpStatus = loginNotIpStatus;
		this.loginNotIpNotice = loginNotIpNotice;
		this.loginClientStatus = loginClientStatus;
		this.loginClientType = loginClientType;
		this.lastModifyTime = lastModifyTime;
		this.lastModifyUser = lastModifyUser;
	}

    @Override
	public String getId() {
		return id;
	}

    @Override
	public void setId(String id) {
		this.id = id;
	}


	/**
	 * @return the loginLogStatus
	 */
	public Integer getLoginLogStatus() {
		return loginLogStatus;
	}

	/**
	 * @param loginLogStatus the loginLogStatus to set
	 */
	public void setLoginLogStatus(Integer loginLogStatus) {
		this.loginLogStatus = loginLogStatus;
	}

	/**
	 * @return the loginErrorCount
	 */
	public Integer getLoginErrorCount() {
		return loginErrorCount;
	}

	/**
	 * @param loginErrorCount the loginErrorCount to set
	 */
	public void setLoginErrorCount(Integer loginErrorCount) {
		this.loginErrorCount = loginErrorCount;
	}

	/**
	 * @return the loginErrorTime
	 */
	public Integer getLoginErrorTime() {
		return loginErrorTime;
	}

	/**
	 * @param loginErrorTime the loginErrorTime to set
	 */
	public void setLoginErrorTime(Integer loginErrorTime) {
		this.loginErrorTime = loginErrorTime;
	}

	/**
	 * @return the loginErrorStatus
	 */
	public Integer getLoginErrorStatus() {
		return loginErrorStatus;
	}

	/**
	 * @param loginErrorStatus the loginErrorStatus to set
	 */
	public void setLoginErrorStatus(Integer loginErrorStatus) {
		this.loginErrorStatus = loginErrorStatus;
	}

	/**
	 * @return the loginUnlockFounder
	 */
	public Integer getLoginUnlockFounder() {
		return loginUnlockFounder;
	}

	/**
	 * @param loginUnlockFounder the loginUnlockFounder to set
	 */
	public void setLoginUnlockFounder(Integer loginUnlockFounder) {
		this.loginUnlockFounder = loginUnlockFounder;
	}

	/**
	 * @return the loginNotIpStatus
	 */
	public Integer getLoginNotIpStatus() {
		return loginNotIpStatus;
	}

	/**
	 * @param loginNotIpStatus the loginNotIpStatus to set
	 */
	public void setLoginNotIpStatus(Integer loginNotIpStatus) {
		this.loginNotIpStatus = loginNotIpStatus;
	}

	/**
	 * @return the loginNotIpNotice
	 */
	public Integer getLoginNotIpNotice() {
		return loginNotIpNotice;
	}

	/**
	 * @param loginNotIpNotice the loginNotIpNotice to set
	 */
	public void setLoginNotIpNotice(Integer loginNotIpNotice) {
		this.loginNotIpNotice = loginNotIpNotice;
	}

	/**
	 * @return the loginClientStatus
	 */
	public Integer getLoginClientStatus() {
		return loginClientStatus;
	}

	/**
	 * @param loginClientStatus the loginClientStatus to set
	 */
	public void setLoginClientStatus(Integer loginClientStatus) {
		this.loginClientStatus = loginClientStatus;
	}

	/**
	 * @return the loginClientType
	 */
	public Integer getLoginClientType() {
		return loginClientType;
	}

	/**
	 * @param loginClientType the loginClientType to set
	 */
	public void setLoginClientType(Integer loginClientType) {
		this.loginClientType = loginClientType;
	}

	/**
	 * @return the lastModifyTime
	 */
	public Long getLastModifyTime() {
		return lastModifyTime;
	}

	/**
	 * @param lastModifyTime the lastModifyTime to set
	 */
	public void setLastModifyTime(Long lastModifyTime) {
		this.lastModifyTime = lastModifyTime;
	}

	/**
	 * @return the lastModifyUser
	 */
	public String getLastModifyUser() {
		return lastModifyUser;
	}

	/**
	 * @param lastModifyUser the lastModifyUser to set
	 */
	public void setLastModifyUser(String lastModifyUser) {
		this.lastModifyUser = lastModifyUser;
	}


	//
	// Chain
	//

	public static SecuritySettingBuilder builder() {
		return new SecuritySettingBuilder();
	}

	public SecuritySettingBuilder bind() {
    	return new SecuritySettingBuilder(this);
    }

	public static class SecuritySettingBuilder {

		private SecuritySetting _model;

		public SecuritySettingBuilder() {
			_model = new SecuritySetting();
		}

		public SecuritySettingBuilder(SecuritySetting model) {
			_model = model;
		}

		public SecuritySetting build() {
			return _model;
		}


		public IConnectionHolder connectionHolder() {
			return _model.getConnectionHolder();
		}

		public SecuritySettingBuilder connectionHolder(IConnectionHolder connectionHolder) {
			_model.setConnectionHolder(connectionHolder);
			return this;
		}

		public String dataSourceName() {
			return _model.getDataSourceName();
		}

		public SecuritySettingBuilder dataSourceName(String dsName) {
			_model.setDataSourceName(dsName);
			return this;
		}

		public IShardingable shardingable() {
			return _model.getShardingable();
		}

		public SecuritySettingBuilder shardingable(IShardingable shardingable) {
    		_model.setShardingable(shardingable);
    		return this;
    	}

		public String id() {
			return _model.getId();
		}

		public SecuritySettingBuilder id(String id) {
			_model.setId(id);
			return this;
		}

		public Integer loginLogStatus() {
			return _model.getLoginLogStatus();
		}

		public SecuritySettingBuilder loginLogStatus(Integer loginLogStatus) {
			_model.setLoginLogStatus(loginLogStatus);
			return this;
		}

		public Integer loginErrorCount() {
			return _model.getLoginErrorCount();
		}

		public SecuritySettingBuilder loginErrorCount(Integer loginErrorCount) {
			_model.setLoginErrorCount(loginErrorCount);
			return this;
		}

		public Integer loginErrorTime() {
			return _model.getLoginErrorTime();
		}

		public SecuritySettingBuilder loginErrorTime(Integer loginErrorTime) {
			_model.setLoginErrorTime(loginErrorTime);
			return this;
		}

		public Integer loginErrorStatus() {
			return _model.getLoginErrorStatus();
		}

		public SecuritySettingBuilder loginErrorStatus(Integer loginErrorStatus) {
			_model.setLoginErrorStatus(loginErrorStatus);
			return this;
		}

		public Integer loginUnlockFounder() {
			return _model.getLoginUnlockFounder();
		}

		public SecuritySettingBuilder loginUnlockFounder(Integer loginUnlockFounder) {
			_model.setLoginUnlockFounder(loginUnlockFounder);
			return this;
		}

		public Integer loginNotIpStatus() {
			return _model.getLoginNotIpStatus();
		}

		public SecuritySettingBuilder loginNotIpStatus(Integer loginNotIpStatus) {
			_model.setLoginNotIpStatus(loginNotIpStatus);
			return this;
		}

		public Integer loginNotIpNotice() {
			return _model.getLoginNotIpNotice();
		}

		public SecuritySettingBuilder loginNotIpNotice(Integer loginNotIpNotice) {
			_model.setLoginNotIpNotice(loginNotIpNotice);
			return this;
		}

		public Integer loginClientStatus() {
			return _model.getLoginClientStatus();
		}

		public SecuritySettingBuilder loginClientStatus(Integer loginClientStatus) {
			_model.setLoginClientStatus(loginClientStatus);
			return this;
		}

		public Integer loginClientType() {
			return _model.getLoginClientType();
		}

		public SecuritySettingBuilder loginClientType(Integer loginClientType) {
			_model.setLoginClientType(loginClientType);
			return this;
		}

		public Long lastModifyTime() {
			return _model.getLastModifyTime();
		}

		public SecuritySettingBuilder lastModifyTime(Long lastModifyTime) {
			_model.setLastModifyTime(lastModifyTime);
			return this;
		}

		public String lastModifyUser() {
			return _model.getLastModifyUser();
		}

		public SecuritySettingBuilder lastModifyUser(String lastModifyUser) {
			_model.setLastModifyUser(lastModifyUser);
			return this;
		}

	}

	/**
	 * SecuritySetting 字段常量表
	 */
	public class FIELDS {
		public static final String ID = "id";
		public static final String LOGIN_LOG_STATUS = "login_log_status";
		public static final String LOGIN_ERROR_COUNT = "login_error_count";
		public static final String LOGIN_ERROR_TIME = "login_error_time";
		public static final String LOGIN_ERROR_STATUS = "login_error_status";
		public static final String LOGIN_UNLOCK_FOUNDER = "login_unlock_founder";
		public static final String LOGIN_NOT_IP_STATUS = "login_not_ip_status";
		public static final String LOGIN_NOT_IP_NOTICE = "login_not_ip_notice";
		public static final String LOGIN_CLIENT_STATUS = "login_client_status";
		public static final String LOGIN_CLIENT_TYPE = "login_client_type";
		public static final String LAST_MODIFY_TIME = "last_modify_time";
		public static final String LAST_MODIFY_USER = "last_modify_user";
	}

	public static final String TABLE_NAME = "security_setting";

}
