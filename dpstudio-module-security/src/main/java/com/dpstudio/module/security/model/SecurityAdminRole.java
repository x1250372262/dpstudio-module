/*
 * Copyright 2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.dpstudio.module.security.model;

import net.ymate.platform.core.beans.annotation.PropertyState;
import net.ymate.platform.core.persistence.IShardingable;
import net.ymate.platform.core.persistence.annotation.*;
import net.ymate.platform.persistence.jdbc.IDatabase;
import net.ymate.platform.persistence.jdbc.IDatabaseConnectionHolder;
import net.ymate.platform.persistence.jdbc.support.BaseEntity;

/**
 * SecurityAdminRole generated By EntityMojo on 2020/11/09 10:09:05
 *
 * @author YMP (https://www.ymate.net/)
 */
@Entity(SecurityAdminRole.TABLE_NAME)
public class SecurityAdminRole extends BaseEntity<SecurityAdminRole, String> {

    private static final long serialVersionUID = 1L;

    @Id
    @Property(name = FIELDS.ID, nullable = false, length = 32)
    @Comment("id")
    @PropertyState(propertyName = FIELDS.ID)
    private String id;

    
    @Property(name = FIELDS.ADMIN_ID, nullable = false, length = 32)
    @Comment("管理员id")
    @PropertyState(propertyName = FIELDS.ADMIN_ID)
    private String adminId;

    
    @Property(name = FIELDS.ROLE_ID, nullable = false, length = 32)
    @Comment("角色id")
    @PropertyState(propertyName = FIELDS.ROLE_ID)
    private String roleId;

    
    @Property(name = FIELDS.CREATE_USER, nullable = false, length = 32)
    @Comment("创建人")
    @PropertyState(propertyName = FIELDS.CREATE_USER)
    private String createUser;

    
    @Property(name = FIELDS.CREATE_TIME, nullable = false, length = 13)
    @Default("0")
    @Comment("创建时间")
    @PropertyState(propertyName = FIELDS.CREATE_TIME)
    private Long createTime;

    
    @Property(name = FIELDS.LAST_MODIFY_USER, nullable = false, length = 32)
    @Comment("最后更新人")
    @PropertyState(propertyName = FIELDS.LAST_MODIFY_USER)
    private String lastModifyUser;

    
    @Property(name = FIELDS.LAST_MODIFY_TIME, nullable = false, length = 13)
    @Default("0")
    @Comment("最后更新时间")
    @PropertyState(propertyName = FIELDS.LAST_MODIFY_TIME)
    private Long lastModifyTime;


    public SecurityAdminRole() {
    }

    public SecurityAdminRole(IDatabase dbOwner) {
        super(dbOwner);
    }


    public SecurityAdminRole(String id, String adminId, String roleId, String createUser, Long createTime, String lastModifyUser, Long lastModifyTime) {
        this.id = id;
        this.adminId = adminId;
        this.roleId = roleId;
        this.createUser = createUser;
        this.createTime = createTime;
        this.lastModifyUser = lastModifyUser;
        this.lastModifyTime = lastModifyTime;
    }

    public SecurityAdminRole(IDatabase dbOwner, String id, String adminId, String roleId, String createUser, Long createTime, String lastModifyUser, Long lastModifyTime) {
        super(dbOwner);
        this.id = id;
        this.adminId = adminId;
        this.roleId = roleId;
        this.createUser = createUser;
        this.createTime = createTime;
        this.lastModifyUser = lastModifyUser;
        this.lastModifyTime = lastModifyTime;
    }

    @Override
    public String getId() {
        return id;
    }

    @Override
    public void setId(String id) {
        this.id = id;
    }

    public String getAdminId() {
        return adminId;
    }

    public void setAdminId(String adminId) {
        this.adminId = adminId;
    }

    public String getRoleId() {
        return roleId;
    }

    public void setRoleId(String roleId) {
        this.roleId = roleId;
    }

    public String getCreateUser() {
        return createUser;
    }

    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    public Long getCreateTime() {
        return createTime;
    }

    public void setCreateTime(Long createTime) {
        this.createTime = createTime;
    }

    public String getLastModifyUser() {
        return lastModifyUser;
    }

    public void setLastModifyUser(String lastModifyUser) {
        this.lastModifyUser = lastModifyUser;
    }

    public Long getLastModifyTime() {
        return lastModifyTime;
    }

    public void setLastModifyTime(Long lastModifyTime) {
        this.lastModifyTime = lastModifyTime;
    }


    public Builder bind() {
        return new Builder(this);
    }

    public static Builder builder() {
        return new Builder();
    }

        public static Builder builder(IDatabase dbOwner) {
            return new Builder(dbOwner);
        }

    public static class Builder {

        private final SecurityAdminRole targetEntity;

        public Builder() {
            targetEntity = new SecurityAdminRole();
        }

        public Builder(IDatabase dbOwner) {
            targetEntity = new SecurityAdminRole(dbOwner);
        }

        public Builder(SecurityAdminRole targetEntity) {
            this.targetEntity = targetEntity;
        }

        public SecurityAdminRole build() {
            return targetEntity;
        }

        public IDatabaseConnectionHolder connectionHolder() {
            return targetEntity.getConnectionHolder();
        }

        public Builder connectionHolder(IDatabaseConnectionHolder connectionHolder) {
            targetEntity.setConnectionHolder(connectionHolder);
            return this;
        }

        public String dataSourceName() {
            return targetEntity.getDataSourceName();
        }

        public Builder dataSourceName(String dataSourceName) {
            targetEntity.setDataSourceName(dataSourceName);
            return this;
        }

        public IShardingable shardingable() {
            return targetEntity.getShardingable();
        }

        public Builder shardingable(IShardingable shardingable) {
            targetEntity.setShardingable(shardingable);
            return this;
        }


        public String id() {
            return targetEntity.getId();
        }

        public Builder id(String id) {
            targetEntity.setId(id);
            return this;
        }

        public String adminId() {
            return targetEntity.getAdminId();
        }

        public Builder adminId(String adminId) {
            targetEntity.setAdminId(adminId);
            return this;
        }

        public String roleId() {
            return targetEntity.getRoleId();
        }

        public Builder roleId(String roleId) {
            targetEntity.setRoleId(roleId);
            return this;
        }

        public String createUser() {
            return targetEntity.getCreateUser();
        }

        public Builder createUser(String createUser) {
            targetEntity.setCreateUser(createUser);
            return this;
        }

        public Long createTime() {
            return targetEntity.getCreateTime();
        }

        public Builder createTime(Long createTime) {
            targetEntity.setCreateTime(createTime);
            return this;
        }

        public String lastModifyUser() {
            return targetEntity.getLastModifyUser();
        }

        public Builder lastModifyUser(String lastModifyUser) {
            targetEntity.setLastModifyUser(lastModifyUser);
            return this;
        }

        public Long lastModifyTime() {
            return targetEntity.getLastModifyTime();
        }

        public Builder lastModifyTime(Long lastModifyTime) {
            targetEntity.setLastModifyTime(lastModifyTime);
            return this;
        }
    }

    public interface FIELDS {
        String ID = "id";
        String ADMIN_ID = "admin_id";
        String ROLE_ID = "role_id";
        String CREATE_USER = "create_user";
        String CREATE_TIME = "create_time";
        String LAST_MODIFY_USER = "last_modify_user";
        String LAST_MODIFY_TIME = "last_modify_time";
    }

    public static final String TABLE_NAME = "security_admin_role";
}
