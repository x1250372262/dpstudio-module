package com.dpstudio.module.security.model;

import net.ymate.platform.core.beans.annotation.PropertyState;
import net.ymate.platform.persistence.IShardingable;
import net.ymate.platform.persistence.annotation.*;
import net.ymate.platform.persistence.jdbc.IConnectionHolder;
import net.ymate.platform.persistence.jdbc.support.BaseEntity;

/**
 * SecurityAdmin generated By EntityGenerator on 2020/10/19 下午 17:08:25
 *
 * @author YMP
 * @version 1.0
 */
@Entity(SecurityAdmin.TABLE_NAME)
public class SecurityAdmin extends BaseEntity<SecurityAdmin, String> {

	private static final long serialVersionUID = 1L;

	@Id
	@Property(name = FIELDS.ID, nullable = false, length = 32)
	@Comment("id")
    @PropertyState(propertyName = FIELDS.ID)
	private String id;
	
	@Property(name = FIELDS.USER_NAME, nullable = false, length = 32)
	@Comment("用户名")
    @PropertyState(propertyName = FIELDS.USER_NAME)
	private String userName;
	
	@Property(name = FIELDS.REAL_NAME, length = 32)
	@Comment("真实姓名")
    @PropertyState(propertyName = FIELDS.REAL_NAME)
	private String realName;
	
	@Property(name = FIELDS.PHOTO_URI, length = 16383)
	@Comment("头像")
    @PropertyState(propertyName = FIELDS.PHOTO_URI)
	private String photoUri;
	
	@Property(name = FIELDS.PASSWORD, nullable = false, length = 32)
	@Comment("密码")
    @PropertyState(propertyName = FIELDS.PASSWORD)
	private String password;
	
	@Property(name = FIELDS.MOBILE, length = 11)
	@Comment("手机号")
    @PropertyState(propertyName = FIELDS.MOBILE)
	private String mobile;
	
	@Property(name = FIELDS.GENDER, length = 1)
	@Default("0")
	@Comment("性别")
    @PropertyState(propertyName = FIELDS.GENDER)
	private Integer gender;
	
	@Property(name = FIELDS.CREATE_USER, nullable = false, length = 32)
	@Comment("创建人")
    @PropertyState(propertyName = FIELDS.CREATE_USER)
	private String createUser;
	
	@Property(name = FIELDS.CREATE_TIME, nullable = false, length = 13)
	@Default("0")
	@Comment("创建时间")
    @PropertyState(propertyName = FIELDS.CREATE_TIME)
	private Long createTime;
	
	@Property(name = FIELDS.LAST_MODIFY_TIME, nullable = false, length = 13)
	@Default("0")
	@Comment("最后修改时间")
    @PropertyState(propertyName = FIELDS.LAST_MODIFY_TIME)
	private Long lastModifyTime;
	
	@Property(name = FIELDS.LAST_MODIFY_USER, nullable = false, length = 32)
	@Comment("最后修改人")
    @PropertyState(propertyName = FIELDS.LAST_MODIFY_USER)
	private String lastModifyUser;
	
	@Property(name = FIELDS.CREATE_IP_ADDR, length = 32)
	@Comment("注册ip")
    @PropertyState(propertyName = FIELDS.CREATE_IP_ADDR)
	private String createIpAddr;
	
	@Property(name = FIELDS.SALT, nullable = false, length = 11)
	@Comment("密码加密字符串")
    @PropertyState(propertyName = FIELDS.SALT)
	private String salt;
	
	@Property(name = FIELDS.DELETE_STATUS, nullable = false, length = 1)
	@Default("0")
	@Comment("删除状态")
    @PropertyState(propertyName = FIELDS.DELETE_STATUS)
	private Integer deleteStatus;
	
	@Property(name = FIELDS.DISABLE_STATUS, nullable = false, length = 1)
	@Default("0")
	@Comment("禁用状态")
    @PropertyState(propertyName = FIELDS.DISABLE_STATUS)
	private Integer disableStatus;
	
	@Property(name = FIELDS.FOUNDER, nullable = false, length = 1)
	@Default("0")
	@Comment("是否是总管理员")
    @PropertyState(propertyName = FIELDS.FOUNDER)
	private Integer founder;
	
	@Property(name = FIELDS.LOGIN_ERROR_COUNT, length = 4)
	@Default("0")
	@Comment("登录错误次数")
    @PropertyState(propertyName = FIELDS.LOGIN_ERROR_COUNT)
	private Integer loginErrorCount;
	
	@Property(name = FIELDS.LOGIN_LOCK_STATUS, length = 1)
	@Default("0")
	@Comment("锁定状态")
    @PropertyState(propertyName = FIELDS.LOGIN_LOCK_STATUS)
	private Integer loginLockStatus;
	
	@Property(name = FIELDS.LOGIN_LOCK_START_TIME, length = 13)
	@Default("0")
	@Comment("锁定开始时间")
    @PropertyState(propertyName = FIELDS.LOGIN_LOCK_START_TIME)
	private Long loginLockStartTime;
	
	@Property(name = FIELDS.LOGIN_LOCK_END_TIME, length = 13)
	@Default("0")
	@Comment("锁定结束时间")
    @PropertyState(propertyName = FIELDS.LOGIN_LOCK_END_TIME)
	private Long loginLockEndTime;
	
	@Property(name = FIELDS.SESSION_TOKEN, length = 255)
	@Comment("session标识")
    @PropertyState(propertyName = FIELDS.SESSION_TOKEN)
	private String sessionToken;

	/**
	 * 构造器
	 */
	public SecurityAdmin() {
	}

    /**
     * 构造器
     *	@param id
     *	@param userName
     *	@param password
     *	@param createUser
     *	@param createTime
     *	@param lastModifyTime
     *	@param lastModifyUser
     *	@param salt
     *	@param deleteStatus
     *	@param disableStatus
     *	@param founder
     */
    public SecurityAdmin(String id, String userName, String password, String createUser, Long createTime, Long lastModifyTime, String lastModifyUser, String salt, Integer deleteStatus, Integer disableStatus, Integer founder) {
        this.id = id;
        this.userName = userName;
        this.password = password;
        this.createUser = createUser;
        this.createTime = createTime;
        this.lastModifyTime = lastModifyTime;
        this.lastModifyUser = lastModifyUser;
        this.salt = salt;
        this.deleteStatus = deleteStatus;
        this.disableStatus = disableStatus;
        this.founder = founder;
    }

	/**
	 * 构造器
	 *	@param id
	 *	@param userName
	 *	@param realName
	 *	@param photoUri
	 *	@param password
	 *	@param mobile
	 *	@param gender
	 *	@param createUser
	 *	@param createTime
	 *	@param lastModifyTime
	 *	@param lastModifyUser
	 *	@param createIpAddr
	 *	@param salt
	 *	@param deleteStatus
	 *	@param disableStatus
	 *	@param founder
	 *	@param loginErrorCount
	 *	@param loginLockStatus
	 *	@param loginLockStartTime
	 *	@param loginLockEndTime
	 *	@param sessionToken
	 */
	public SecurityAdmin(String id, String userName, String realName, String photoUri, String password, String mobile, Integer gender, String createUser, Long createTime, Long lastModifyTime, String lastModifyUser, String createIpAddr, String salt, Integer deleteStatus, Integer disableStatus, Integer founder, Integer loginErrorCount, Integer loginLockStatus, Long loginLockStartTime, Long loginLockEndTime, String sessionToken) {
		this.id = id;
		this.userName = userName;
		this.realName = realName;
		this.photoUri = photoUri;
		this.password = password;
		this.mobile = mobile;
		this.gender = gender;
		this.createUser = createUser;
		this.createTime = createTime;
		this.lastModifyTime = lastModifyTime;
		this.lastModifyUser = lastModifyUser;
		this.createIpAddr = createIpAddr;
		this.salt = salt;
		this.deleteStatus = deleteStatus;
		this.disableStatus = disableStatus;
		this.founder = founder;
		this.loginErrorCount = loginErrorCount;
		this.loginLockStatus = loginLockStatus;
		this.loginLockStartTime = loginLockStartTime;
		this.loginLockEndTime = loginLockEndTime;
		this.sessionToken = sessionToken;
	}

    @Override
	public String getId() {
		return id;
	}

    @Override
	public void setId(String id) {
		this.id = id;
	}


	/**
	 * @return the userName
	 */
	public String getUserName() {
		return userName;
	}

	/**
	 * @param userName the userName to set
	 */
	public void setUserName(String userName) {
		this.userName = userName;
	}

	/**
	 * @return the realName
	 */
	public String getRealName() {
		return realName;
	}

	/**
	 * @param realName the realName to set
	 */
	public void setRealName(String realName) {
		this.realName = realName;
	}

	/**
	 * @return the photoUri
	 */
	public String getPhotoUri() {
		return photoUri;
	}

	/**
	 * @param photoUri the photoUri to set
	 */
	public void setPhotoUri(String photoUri) {
		this.photoUri = photoUri;
	}

	/**
	 * @return the password
	 */
	public String getPassword() {
		return password;
	}

	/**
	 * @param password the password to set
	 */
	public void setPassword(String password) {
		this.password = password;
	}

	/**
	 * @return the mobile
	 */
	public String getMobile() {
		return mobile;
	}

	/**
	 * @param mobile the mobile to set
	 */
	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	/**
	 * @return the gender
	 */
	public Integer getGender() {
		return gender;
	}

	/**
	 * @param gender the gender to set
	 */
	public void setGender(Integer gender) {
		this.gender = gender;
	}

	/**
	 * @return the createUser
	 */
	public String getCreateUser() {
		return createUser;
	}

	/**
	 * @param createUser the createUser to set
	 */
	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}

	/**
	 * @return the createTime
	 */
	public Long getCreateTime() {
		return createTime;
	}

	/**
	 * @param createTime the createTime to set
	 */
	public void setCreateTime(Long createTime) {
		this.createTime = createTime;
	}

	/**
	 * @return the lastModifyTime
	 */
	public Long getLastModifyTime() {
		return lastModifyTime;
	}

	/**
	 * @param lastModifyTime the lastModifyTime to set
	 */
	public void setLastModifyTime(Long lastModifyTime) {
		this.lastModifyTime = lastModifyTime;
	}

	/**
	 * @return the lastModifyUser
	 */
	public String getLastModifyUser() {
		return lastModifyUser;
	}

	/**
	 * @param lastModifyUser the lastModifyUser to set
	 */
	public void setLastModifyUser(String lastModifyUser) {
		this.lastModifyUser = lastModifyUser;
	}

	/**
	 * @return the createIpAddr
	 */
	public String getCreateIpAddr() {
		return createIpAddr;
	}

	/**
	 * @param createIpAddr the createIpAddr to set
	 */
	public void setCreateIpAddr(String createIpAddr) {
		this.createIpAddr = createIpAddr;
	}

	/**
	 * @return the salt
	 */
	public String getSalt() {
		return salt;
	}

	/**
	 * @param salt the salt to set
	 */
	public void setSalt(String salt) {
		this.salt = salt;
	}

	/**
	 * @return the deleteStatus
	 */
	public Integer getDeleteStatus() {
		return deleteStatus;
	}

	/**
	 * @param deleteStatus the deleteStatus to set
	 */
	public void setDeleteStatus(Integer deleteStatus) {
		this.deleteStatus = deleteStatus;
	}

	/**
	 * @return the disableStatus
	 */
	public Integer getDisableStatus() {
		return disableStatus;
	}

	/**
	 * @param disableStatus the disableStatus to set
	 */
	public void setDisableStatus(Integer disableStatus) {
		this.disableStatus = disableStatus;
	}

	/**
	 * @return the founder
	 */
	public Integer getFounder() {
		return founder;
	}

	/**
	 * @param founder the founder to set
	 */
	public void setFounder(Integer founder) {
		this.founder = founder;
	}

	/**
	 * @return the loginErrorCount
	 */
	public Integer getLoginErrorCount() {
		return loginErrorCount;
	}

	/**
	 * @param loginErrorCount the loginErrorCount to set
	 */
	public void setLoginErrorCount(Integer loginErrorCount) {
		this.loginErrorCount = loginErrorCount;
	}

	/**
	 * @return the loginLockStatus
	 */
	public Integer getLoginLockStatus() {
		return loginLockStatus;
	}

	/**
	 * @param loginLockStatus the loginLockStatus to set
	 */
	public void setLoginLockStatus(Integer loginLockStatus) {
		this.loginLockStatus = loginLockStatus;
	}

	/**
	 * @return the loginLockStartTime
	 */
	public Long getLoginLockStartTime() {
		return loginLockStartTime;
	}

	/**
	 * @param loginLockStartTime the loginLockStartTime to set
	 */
	public void setLoginLockStartTime(Long loginLockStartTime) {
		this.loginLockStartTime = loginLockStartTime;
	}

	/**
	 * @return the loginLockEndTime
	 */
	public Long getLoginLockEndTime() {
		return loginLockEndTime;
	}

	/**
	 * @param loginLockEndTime the loginLockEndTime to set
	 */
	public void setLoginLockEndTime(Long loginLockEndTime) {
		this.loginLockEndTime = loginLockEndTime;
	}

	/**
	 * @return the sessionToken
	 */
	public String getSessionToken() {
		return sessionToken;
	}

	/**
	 * @param sessionToken the sessionToken to set
	 */
	public void setSessionToken(String sessionToken) {
		this.sessionToken = sessionToken;
	}


	//
	// Chain
	//

	public static SecurityAdminBuilder builder() {
		return new SecurityAdminBuilder();
	}

	public SecurityAdminBuilder bind() {
    	return new SecurityAdminBuilder(this);
    }

	public static class SecurityAdminBuilder {

		private SecurityAdmin _model;

		public SecurityAdminBuilder() {
			_model = new SecurityAdmin();
		}

		public SecurityAdminBuilder(SecurityAdmin model) {
			_model = model;
		}

		public SecurityAdmin build() {
			return _model;
		}


		public IConnectionHolder connectionHolder() {
			return _model.getConnectionHolder();
		}

		public SecurityAdminBuilder connectionHolder(IConnectionHolder connectionHolder) {
			_model.setConnectionHolder(connectionHolder);
			return this;
		}

		public String dataSourceName() {
			return _model.getDataSourceName();
		}

		public SecurityAdminBuilder dataSourceName(String dsName) {
			_model.setDataSourceName(dsName);
			return this;
		}

		public IShardingable shardingable() {
			return _model.getShardingable();
		}

		public SecurityAdminBuilder shardingable(IShardingable shardingable) {
    		_model.setShardingable(shardingable);
    		return this;
    	}

		public String id() {
			return _model.getId();
		}

		public SecurityAdminBuilder id(String id) {
			_model.setId(id);
			return this;
		}

		public String userName() {
			return _model.getUserName();
		}

		public SecurityAdminBuilder userName(String userName) {
			_model.setUserName(userName);
			return this;
		}

		public String realName() {
			return _model.getRealName();
		}

		public SecurityAdminBuilder realName(String realName) {
			_model.setRealName(realName);
			return this;
		}

		public String photoUri() {
			return _model.getPhotoUri();
		}

		public SecurityAdminBuilder photoUri(String photoUri) {
			_model.setPhotoUri(photoUri);
			return this;
		}

		public String password() {
			return _model.getPassword();
		}

		public SecurityAdminBuilder password(String password) {
			_model.setPassword(password);
			return this;
		}

		public String mobile() {
			return _model.getMobile();
		}

		public SecurityAdminBuilder mobile(String mobile) {
			_model.setMobile(mobile);
			return this;
		}

		public Integer gender() {
			return _model.getGender();
		}

		public SecurityAdminBuilder gender(Integer gender) {
			_model.setGender(gender);
			return this;
		}

		public String createUser() {
			return _model.getCreateUser();
		}

		public SecurityAdminBuilder createUser(String createUser) {
			_model.setCreateUser(createUser);
			return this;
		}

		public Long createTime() {
			return _model.getCreateTime();
		}

		public SecurityAdminBuilder createTime(Long createTime) {
			_model.setCreateTime(createTime);
			return this;
		}

		public Long lastModifyTime() {
			return _model.getLastModifyTime();
		}

		public SecurityAdminBuilder lastModifyTime(Long lastModifyTime) {
			_model.setLastModifyTime(lastModifyTime);
			return this;
		}

		public String lastModifyUser() {
			return _model.getLastModifyUser();
		}

		public SecurityAdminBuilder lastModifyUser(String lastModifyUser) {
			_model.setLastModifyUser(lastModifyUser);
			return this;
		}

		public String createIpAddr() {
			return _model.getCreateIpAddr();
		}

		public SecurityAdminBuilder createIpAddr(String createIpAddr) {
			_model.setCreateIpAddr(createIpAddr);
			return this;
		}

		public String salt() {
			return _model.getSalt();
		}

		public SecurityAdminBuilder salt(String salt) {
			_model.setSalt(salt);
			return this;
		}

		public Integer deleteStatus() {
			return _model.getDeleteStatus();
		}

		public SecurityAdminBuilder deleteStatus(Integer deleteStatus) {
			_model.setDeleteStatus(deleteStatus);
			return this;
		}

		public Integer disableStatus() {
			return _model.getDisableStatus();
		}

		public SecurityAdminBuilder disableStatus(Integer disableStatus) {
			_model.setDisableStatus(disableStatus);
			return this;
		}

		public Integer founder() {
			return _model.getFounder();
		}

		public SecurityAdminBuilder founder(Integer founder) {
			_model.setFounder(founder);
			return this;
		}

		public Integer loginErrorCount() {
			return _model.getLoginErrorCount();
		}

		public SecurityAdminBuilder loginErrorCount(Integer loginErrorCount) {
			_model.setLoginErrorCount(loginErrorCount);
			return this;
		}

		public Integer loginLockStatus() {
			return _model.getLoginLockStatus();
		}

		public SecurityAdminBuilder loginLockStatus(Integer loginLockStatus) {
			_model.setLoginLockStatus(loginLockStatus);
			return this;
		}

		public Long loginLockStartTime() {
			return _model.getLoginLockStartTime();
		}

		public SecurityAdminBuilder loginLockStartTime(Long loginLockStartTime) {
			_model.setLoginLockStartTime(loginLockStartTime);
			return this;
		}

		public Long loginLockEndTime() {
			return _model.getLoginLockEndTime();
		}

		public SecurityAdminBuilder loginLockEndTime(Long loginLockEndTime) {
			_model.setLoginLockEndTime(loginLockEndTime);
			return this;
		}

		public String sessionToken() {
			return _model.getSessionToken();
		}

		public SecurityAdminBuilder sessionToken(String sessionToken) {
			_model.setSessionToken(sessionToken);
			return this;
		}

	}

	/**
	 * SecurityAdmin 字段常量表
	 */
	public class FIELDS {
		public static final String ID = "id";
		public static final String USER_NAME = "user_name";
		public static final String REAL_NAME = "real_name";
		public static final String PHOTO_URI = "photo_uri";
		public static final String PASSWORD = "password";
		public static final String MOBILE = "mobile";
		public static final String GENDER = "gender";
		public static final String CREATE_USER = "create_user";
		public static final String CREATE_TIME = "create_time";
		public static final String LAST_MODIFY_TIME = "last_modify_time";
		public static final String LAST_MODIFY_USER = "last_modify_user";
		public static final String CREATE_IP_ADDR = "create_ip_addr";
		public static final String SALT = "salt";
		public static final String DELETE_STATUS = "delete_status";
		public static final String DISABLE_STATUS = "disable_status";
		public static final String FOUNDER = "founder";
		public static final String LOGIN_ERROR_COUNT = "login_error_count";
		public static final String LOGIN_LOCK_STATUS = "login_lock_status";
		public static final String LOGIN_LOCK_START_TIME = "login_lock_start_time";
		public static final String LOGIN_LOCK_END_TIME = "login_lock_end_time";
		public static final String SESSION_TOKEN = "session_token";
	}

	public static final String TABLE_NAME = "security_admin";

}
