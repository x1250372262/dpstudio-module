/*
 * Copyright 2021 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.dpstudio.module.mybatis.annotation;

import com.dpstudio.module.mybatis.nullBean.*;
import com.dpstudio.module.mybatis.transaction.YMPTransactionFactory;
import org.apache.ibatis.cache.Cache;
import org.apache.ibatis.io.VFS;
import org.apache.ibatis.mapping.DatabaseIdProvider;
import org.apache.ibatis.plugin.Interceptor;
import org.apache.ibatis.reflection.factory.ObjectFactory;
import org.apache.ibatis.reflection.wrapper.ObjectWrapperFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
import org.apache.ibatis.transaction.TransactionFactory;
import org.apache.ibatis.type.TypeHandler;

import java.lang.annotation.*;

/**
 * MybatisConf generated By ModuleMojo on 2021/02/22 16:46
 *
 * @author YMP (https://www.ymate.net/)
 */
@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface MybatisConf {

    String configLocation() default "";

    String mapperLocations() default "${user.dir}/mappers/";

    Class<? extends TransactionFactory> transactionFactory() default YMPTransactionFactory.class;

    String configurationProperties() default "";

    String environment() default "";

    Class<? extends Interceptor>[] plugins() default {};

    Class<? extends TypeHandler>[] typeHandlers() default {};

    String[] typeHandlersPackage() default {};

    Class<?>[] typeAliases() default {};

    String[] typeAliasesPackage() default {};

    Class<?> typeAliasesSuperType() default Object.class;

    Class<? extends DatabaseIdProvider> databaseIdProvider() default DatabaseIdProviderNullBean.class;

    Class<? extends VFS> vfs() default VFSNullBean.class;

    Class<? extends Cache> cache() default CacheNullBean.class;

    Class<? extends ObjectFactory> objectFactory() default ObjectFactoryNullBean.class;

    Class<? extends ObjectWrapperFactory> objectWrapperFactory() default ObjectWrapperFactoryNullBean.class;
}
